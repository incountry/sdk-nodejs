addons:
  sonarcloud:
    organization: "incountry"

language: node_js
node_js:
  - 11

jobs:
  include:
    - stage: build
      name: "Build the code, scan with Snyk, run all tests & linters"
      before_install:
        # Install Sonar-scanner
        - wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONARSCANNER_VERSION}-linux.zip
        - unzip -q sonar-scanner-cli-${SONARSCANNER_VERSION}-linux.zip -d /home/travis/bin
        # Prepare envvars for the build
        - |
          if [[ $TRAVIS_BRANCH == "master" ]]; then export ENV=PRD;
          elif [[ $TRAVIS_BRANCH == "develop" ]]; then export ENV=QA;
          elif [[ $TRAVIS_BRANCH =~ ^RC_.*$ ]]; then export ENV=STG;
          else export ENV=QA; fi
        - echo "ENV=${ENV}"
        - envsubst < .env.template > .env.value
        - envsubst < .env.value > .env
      script:
        # Print debug information
        - echo "Building for branch=$TRAVIS_BRANCH, PR=${TRAVIS_PULL_REQUEST} ..."; env | grep "COMMIT\|PULL\|BRANCH"
        # Perform the build
        - ./travis-build.sh
    - stage: build
      name: "Run integration tests"
      script:
        # Print debug information
        - echo "Building for branch=$TRAVIS_BRANCH, PR=${TRAVIS_PULL_REQUEST} ..."; env | grep "COMMIT\|PULL\|BRANCH"
        # Perform the integration tests
        - npm install
        - npm run integrations
    - stage: sonar
      name: "Run Sonar Quality Gate"
      script:
        # Sonar Quality gate. If it fails, it fails the build due to 'sonar.qualitygate.wait=true' (but you could temporarily override this via Travis envvar)
        - sonar-scanner -Dsonar.qualitygate.wait=${SONAR_QUALITY_GATE_FAILS_BUILD:-true}

stages:
  - name: build
  - name: sonar

env:
  global:
    - APP_NAME=sdk-nodejs
    # Versions of deps
    - SONARSCANNER_VERSION=4.3.0.2102
